#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def inventory_checkpoint_fan(info):
    return [ (name, None)  for (index, name, value, unit, type, state) in info ]

def check_checkpoint_fan(item, _no_params, info):
    for index, name, value, unit, type, state in info:
        if name == item:
            state = saveint(state)
            perfdata = [ ( "fanspeed in rpm", value ) ]
            if state == 0:
                return (0, "FanSpeed is %s RPM " % value, perfdata )
            if state == 1:
                return (2, "FanSpeed is out of normal range: %s RPM " % value, perfdata )
            if state == 2:
                return (3, "Reading error: %s RPM " % value, perfdata )
            else:
                return (3, "invalid state: %s RPM " % value, perfdata )

    return (3, "Sensor not found in SNMP output")

check_info["checkpoint_fan"] = {
    "check_function"        : check_checkpoint_fan,
    "inventory_function"    : inventory_checkpoint_fan,
    "service_description"   : "Fan %s",
    "has_perfdata"          : True,
    "snmp_info"             : ( ".1.3.6.1.4.1.2620.1.6.7.8.2.1", [
                                    "1", # fanSpeedSensorIndex
                                    "2", # fanSpeedSensorName
                                    "3", # fanSpeedSensorValue
                                    "4", # fanSpeedSensorUnit
                                    "5", # fanSpeedSensorType
                                    "6", # fanSpeedSensorStatus
                              ]),
}

